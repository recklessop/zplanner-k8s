apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/grafana
    type: DirectoryOrCreate

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: datasource-volume
          mountPath: /etc/grafana/provisioning/datasources
          subPath: datasource.yml
        - name: dashboard-provisioning-volume
          mountPath: /etc/grafana/provisioning/dashboards
          subPath: dashboards.yml
        - name: dashboard-json-volume
          mountPath: /etc/grafana/provisioning/dashboards
          subPath: dashboard.json
        env:
        - name: GF_SECURITY_ADMIN_USER
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: GF_SECURITY_ADMIN_USER
        - name: GF_SECURITY_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: grafana-secret
              key: GF_SECURITY_ADMIN_PASSWORD
        - name: GF_AUTH_ANONYMOUS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: grafana-config
              key: GF_AUTH_ANONYMOUS_ENABLED
        - name: GF_DEFAULTS_PATHS_PROVISIONING
          valueFrom:
            configMapKeyRef:
              name: grafana-config
              key: GF_DEFAULTS_PATHS_PROVISIONING
        - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
          valueFrom:
            configMapKeyRef:
              name: grafana-config
              key: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
        - name: GF_PLUGINS_ENABLE_ALPHA
          valueFrom:
            configMapKeyRef:
              name: grafana-config
              key: GF_PLUGINS_ENABLE_ALPHA
        - name: INFLUXDB_HOST
          valueFrom:
            configMapKeyRef:
              name: influxdb-config
              key: INFLUXDB_HOST
        - name: INFLUXDB_PORT
          valueFrom:
            configMapKeyRef:
              name: influxdb-config
              key: INFLUXDB_PORT
        - name: INFLUXDB_TOKEN
          valueFrom:
            configMapKeyRef:
              name: influxdb-config
              key: INFLUXDB_TOKEN
        - name: INFLUXDB_ORG
          valueFrom:
            configMapKeyRef:
              name: influxdb-config
              key: INFLUXDB_ORG
        - name: INFLUXDB_BUCKET
          valueFrom:
            configMapKeyRef:
              name: influxdb-config
              key: INFLUXDB_BUCKET
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: datasource-volume
        configMap:
          name: grafana-provisioning
          items:
          - key: datasource.yml
            path: datasource.yml
      - name: dashboard-provisioning-volume
        configMap:
          name: grafana-provisioning
          items:
          - key: dashboards.yml
            path: dashboards.yml
      - name: dashboard-json-volume
        configMap:
          name: grafana-provisioning
          items:
          - key: dashboard.json
            path: dashboard.json

---

apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30000
  selector:
    app: grafana
